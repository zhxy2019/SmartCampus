<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bupt.sse.SmartCampus.dao.CollegeMapper">
  <resultMap id="BaseResultMap" type="bupt.sse.SmartCampus.model.College">
    <id column="collegeId" jdbcType="VARCHAR" property="collegeid" />
    <id column="majorId" jdbcType="VARCHAR" property="majorid" />
    <result column="collegeName" jdbcType="VARCHAR" property="collegename" />
    <result column="majorName" jdbcType="VARCHAR" property="majorname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    collegeId, majorId, collegeName, majorName
  </sql>
  <select id="selectByExample" parameterType="bupt.sse.SmartCampus.model.CollegeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from college
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="bupt.sse.SmartCampus.model.CollegeKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from college
    where collegeId = #{collegeid,jdbcType=VARCHAR}
      and majorId = #{majorid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="bupt.sse.SmartCampus.model.CollegeKey">
    delete from college
    where collegeId = #{collegeid,jdbcType=VARCHAR}
      and majorId = #{majorid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="bupt.sse.SmartCampus.model.CollegeExample">
    delete from college
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="bupt.sse.SmartCampus.model.College">
    insert into college (collegeId, majorId, collegeName, 
      majorName)
    values (#{collegeid,jdbcType=VARCHAR}, #{majorid,jdbcType=VARCHAR}, #{collegename,jdbcType=VARCHAR}, 
      #{majorname,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="bupt.sse.SmartCampus.model.College">
    insert into college
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="collegeid != null">
        collegeId,
      </if>
      <if test="majorid != null">
        majorId,
      </if>
      <if test="collegename != null">
        collegeName,
      </if>
      <if test="majorname != null">
        majorName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="collegeid != null">
        #{collegeid,jdbcType=VARCHAR},
      </if>
      <if test="majorid != null">
        #{majorid,jdbcType=VARCHAR},
      </if>
      <if test="collegename != null">
        #{collegename,jdbcType=VARCHAR},
      </if>
      <if test="majorname != null">
        #{majorname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="bupt.sse.SmartCampus.model.CollegeExample" resultType="java.lang.Long">
    select count(*) from college
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update college
    <set>
      <if test="record.collegeid != null">
        collegeId = #{record.collegeid,jdbcType=VARCHAR},
      </if>
      <if test="record.majorid != null">
        majorId = #{record.majorid,jdbcType=VARCHAR},
      </if>
      <if test="record.collegename != null">
        collegeName = #{record.collegename,jdbcType=VARCHAR},
      </if>
      <if test="record.majorname != null">
        majorName = #{record.majorname,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update college
    set collegeId = #{record.collegeid,jdbcType=VARCHAR},
      majorId = #{record.majorid,jdbcType=VARCHAR},
      collegeName = #{record.collegename,jdbcType=VARCHAR},
      majorName = #{record.majorname,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="bupt.sse.SmartCampus.model.College">
    update college
    <set>
      <if test="collegename != null">
        collegeName = #{collegename,jdbcType=VARCHAR},
      </if>
      <if test="majorname != null">
        majorName = #{majorname,jdbcType=VARCHAR},
      </if>
    </set>
    where collegeId = #{collegeid,jdbcType=VARCHAR}
      and majorId = #{majorid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="bupt.sse.SmartCampus.model.College">
    update college
    set collegeName = #{collegename,jdbcType=VARCHAR},
      majorName = #{majorname,jdbcType=VARCHAR}
    where collegeId = #{collegeid,jdbcType=VARCHAR}
      and majorId = #{majorid,jdbcType=VARCHAR}
  </update>

  <select id="getAllCollegeIdAndName" resultType="java.util.Map">
    select distinct collegeId,collegeName from college;
  </select>
  <select id="getMajorIdAndNameByCollegeId" resultType="java.util.Map">
    select distinct majorId,majorName from college where collegeId=#{collegeId,jdbcType=VARCHAR};
  </select>
  <select id="selectCollegeDataByStudentId" resultType="bupt.sse.SmartCampus.model.College">
    select co.*
    from student as s,class as cl,college as co
    where s.classId=cl.classId and cl.majorId=co.majorId
    and s.studentId=#{studentId,jdbcType=VARCHAR};
  </select>
</mapper>